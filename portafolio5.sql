-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;

/*Creación de tablas*/

CREATE TABLE IF NOT EXISTS public.clientes
(
    id serial NOT NULL,
	rut character varying(12) NOT NULL,
    nombre character varying(20) NOT NULL,
    apellido character varying(20) NOT NULL,
    email character varying(225) NOT NULL,
	contrasena character varying (20) NOT NULL,
    telefono character varying(12) NOT NULL,
    direccion character varying(120) NOT NULL,
    comuna character varying(30) NOT NULL,
    region character varying(120) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.productos
(
    id serial NOT NULL,
    nombre character varying(255) NOT NULL,
    descripcion character varying(255) NOT NULL,
    precio integer NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.inventario
(
    id serial NOT NULL,
    id_producto integer NOT NULL,
    cantidad integer NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.detalle_facturas
(
    id serial NOT NULL,
	fecha date NOT NULL,
    id_producto integer NOT NULL,
    id_cliente integer NOT NULL,
    id_vendedor integer NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.vendedores
(
    id serial NOT NULL,
	rut_vendedor character varying(12) NOT NULL,
    nombre character varying(20) NOT NULL,
    apellido character varying(20) NOT NULL,
    PRIMARY KEY (id)
);


ALTER TABLE IF EXISTS public.inventario
    ADD CONSTRAINT id_productos FOREIGN KEY (id_producto)
    REFERENCES public.productos (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

ALTER TABLE IF EXISTS public.detalle_facturas
    ADD CONSTRAINT id_clientes FOREIGN KEY (id_cliente)
    REFERENCES public.clientes (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.detalle_facturas
    ADD CONSTRAINT id_productos FOREIGN KEY (id_producto)
    REFERENCES public.productos (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.detalle_facturas
    ADD CONSTRAINT id_vendedores FOREIGN KEY (id_vendedor)
    REFERENCES public.vendedores (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

/*Poblado de tabla productos, 5 productos*/

INSERT INTO productos (id, nombre, descripcion, precio) VALUES 
(default, 'Guitarra Fender Stratocaster Traditional 50s Made In Japan','Guitarra Fender Stratocaster Traditional 50s Made In Japan',1249990),
(default, 'Pack de Studio Focusrite Scarlett Solo 3rd Gen','Pack de Studio Focusrite Scarlett Solo 3rd Gen',299900),
(default, 'Amplificador de guitarra VOX AC30C2X - 30W','Amplificador de guitarra VOX AC30C2X - 30W',1359900),
(default, 'Pedal Ibanez TSMINI - Tube Screamer','Pedal Ibanez TSMINI - Tube Screamer',59990),
(default, 'Audífonos de monitoreo Sennheiser HD 280 PRO', 'Audífonos de monitoreo Sennheiser HD 280 PRO',129900);

/*Poblado de tabla clientes, 5 clientes diferentes*/
INSERT INTO clientes (id, rut, nombre, apellido, email, contrasena, telefono, direccion, comuna, region) VALUES 
(default, '17023445-3', 'Roberto', 'Sustantiva', 'rsustantiva@gmail.com', 'r17023', '+56996654332', 'Calle 15 #1151', 'Viña del Mar', 'Región de Valparaíso'),
(default, '14555987-5', 'Matilda', 'Pgadmin', 'matildapg@gmail.com', 'm14555', '+56974456457', 'Covarrubias #324', 'Coquimbo', 'Región de Coquimbo'),
(default, '21506391-2', 'Gustavo', 'React', 'reactg@gmail.com', 'g21506', '+56983472948', 'Francisco Bilbao #1035', 'Providencia', 'Región Metropolitana'),
(default, '10112065-6', 'Valentina', 'Node', 'vnode1975@gmail.com', 'v10112', '+56991122234', 'Juan Urzúa #459', 'Pudahuel', 'Región Metropolitana'),
(default, '13002505-1', 'Guillermo', 'Javascript', 'gjavascript@gmail.com', 'g13002', '+56995967441', 'Almirante Latorre #101', 'Valparaíso', 'Región de Valparaíso');

/*Poblado de tabla vendedores, 5 vendedores*/
INSERT INTO vendedores (id, rut_vendedor, nombre, apellido) VALUES 
(default, '19607275-4', 'Gonzalo', 'Python'),
(default, '16333992-0', 'María', 'Php'),
(default, '11504322-3', 'Elías', 'Django'),
(default, '19899766-K', 'Teresa', 'Java'),
(default, '17038171-9', 'Francisca', 'Perl');

/*Poblado de tabla inventario*/
INSERT INTO inventario (id, id_producto, cantidad) VALUES 
(default, 1, 1),
(default, 2, 7),
(default, 3, 2),
(default, 4, 5),
(default, 5, 10);

/*Poblado de tabla detalle de facturas, simulación de 6 compras*/
INSERT INTO detalle_facturas (id, fecha, id_producto, id_cliente, id_vendedor) VALUES 
(default, '2022-12-16', 1, 1, 3),
(default, '2022-12-16', 3, 1, 3),
(default, '2022-12-16', 4, 1, 3);

INSERT INTO detalle_facturas (id, fecha, id_producto, id_cliente, id_vendedor) VALUES 
(default, '2022-12-10', 2, 2, 5),
(default, '2022-12-10', 5, 2, 5);

INSERT INTO detalle_facturas (id, fecha, id_producto, id_cliente, id_vendedor) VALUES (default, '2022-11-29', 3, 3, 1);

INSERT INTO detalle_facturas (id, fecha, id_producto, id_cliente, id_vendedor) VALUES 
(default, '2022-11-28', 3, 4, 4),
(default, '2022-11-28', 5, 4, 4);

INSERT INTO detalle_facturas (id, fecha, id_producto, id_cliente, id_vendedor) VALUES 
(default, '2022-12-22', 5, 5, 2),
(default, '2022-12-22', 2, 5, 2);

INSERT INTO detalle_facturas (id, fecha, id_producto, id_cliente, id_vendedor) VALUES (default, '2022-12-22', 5, 1, 1);


/***CONSULTAS SQL***/

/*Actualizar precio productos con un 20% de descuento*/
ALTER TABLE productos ADD descuento decimal;
ALTER TABLE productos ADD precio_descuento integer;

UPDATE productos SET descuento=0.2 WHERE id=1;
UPDATE productos SET descuento=0.2 WHERE id=2;
UPDATE productos SET descuento=0.2 WHERE id=3;
UPDATE productos SET descuento=0.2 WHERE id=4;
UPDATE productos SET descuento=0.2 WHERE id=5;

UPDATE productos SET precio_descuento=precio-(precio*descuento) WHERE id=1;
UPDATE productos SET precio_descuento=precio-(precio*descuento) WHERE id=2;
UPDATE productos SET precio_descuento=precio-(precio*descuento) WHERE id=3;
UPDATE productos SET precio_descuento=precio-(precio*descuento) WHERE id=4;
UPDATE productos SET precio_descuento=precio-(precio*descuento) WHERE id=5;

/*Listar productos con stock crítico (5 o menos productos)*/
SELECT nombre, cantidad FROM productos p
INNER JOIN inventario i ON p.id=i.id_producto
WHERE cantidad <= 5

/*Simular compra de 3 productos, calcular subtotal, agregar IVA, mostrar el total de la compra*/
	/*Compra 1*/
SELECT d.id AS id_factura, fecha AS fecha_compra,
sum(precio_descuento) AS subtotal, sum(precio_descuento)*0.19 AS IVA, sum(precio_descuento)+(sum(precio_descuento*0.19)) AS total_compra
FROM detalle_facturas d
INNER JOIN productos p ON p.id=d.id_producto
WHERE d.id=1
GROUP BY d.id

	/*Compra 2*/
SELECT d.id AS id_factura, fecha AS fecha_compra,
sum(precio_descuento) AS subtotal, sum(precio_descuento)*0.19 AS IVA, sum(precio_descuento)+(sum(precio_descuento*0.19)) AS total_compra
FROM detalle_facturas d
INNER JOIN productos p ON p.id=d.id_producto
WHERE d.id=2
GROUP BY d.id

	/*Compra 3*/
SELECT d.id AS id_factura, fecha AS fecha_compra,
sum(precio_descuento) AS subtotal, sum(precio_descuento)*0.19 AS IVA, sum(precio_descuento)+(sum(precio_descuento*0.19)) AS total_compra
FROM detalle_facturas d
INNER JOIN productos p ON p.id=d.id_producto
WHERE d.id=3
GROUP BY d.id

/*Mostrar total de ventas diciembre 2022*/
SELECT sum(precio_descuento) AS ventas_diciembre
FROM detalle_facturas d
INNER JOIN productos p ON p.id=d.id_producto
WHERE fecha BETWEEN '2022-12-01' AND '2022-12-31'

/*Listar comportamiento de usuario que hizo más compras durante el 2022*/
	/*Identificar usuario que hizo más compras*/
SELECT rut, count(id_producto) AS cuenta FROM detalle_facturas d
INNER JOIN clientes c ON c.id=d.id_cliente
WHERE fecha BETWEEN '2022-01-01' AND '2022-12-31'
GROUP BY c.rut
ORDER BY cuenta desc

	/*Comportamiento usuario que hizo más compras durante 2022*/
SELECT rut, p.nombre, fecha FROM detalle_facturas d
INNER JOIN clientes c ON c.id=d.id_cliente
INNER JOIN productos p ON p.id=d.id_producto
WHERE rut='17023445-3'
ORDER BY fecha asc

END;